#!/usr/bin/env pwsh
<#
.SYNOPSIS
    Start the HTTP Audio Server for Sonos TTS
.DESCRIPTION
    This script starts a simple HTTP server that serves audio files
    generated by Piper TTS to Sonos speakers.
.NOTES
    Requires Python 3.x to be installed and available in PATH
#>

param(
    [string]$HostIP = "0.0.0.0",
    [int]$Port = 8080,
    [string]$AudioDir = "C:\temp\audio",
    [int]$CleanupInterval = 60
)

# Ensure audio directory exists
if (!(Test-Path $AudioDir)) {
    New-Item -ItemType Directory -Path $AudioDir -Force | Out-Null
    Write-Host "Created audio directory: $AudioDir"
}

# Check if Python is available
try {
    $pythonVersion = python --version 2>&1
    Write-Host "Found Python: $pythonVersion"
} catch {
    Write-Error "Python is not installed or not in PATH. Please install Python 3.x"
    exit 1
}

# Check if audio-server.py exists
$scriptPath = Join-Path $PSScriptRoot "mqtt-testing\scripts\audio-server.py"
if (!(Test-Path $scriptPath)) {
    Write-Error "Audio server script not found at: $scriptPath"
    exit 1
}

Write-Host "==========================================="
Write-Host "    SONOS AUDIO SERVER STARTUP"
Write-Host "==========================================="
Write-Host ""
Write-Host "Configuration:"
Write-Host "  Host: $HostIP"
Write-Host "  Port: $Port"
Write-Host "  Audio Directory: $AudioDir"
Write-Host "  Cleanup Interval: $CleanupInterval seconds"
Write-Host ""
Write-Host "Starting HTTP Audio Server..."
Write-Host "Press Ctrl+C to stop the server"
Write-Host ""

# Start the audio server
try {
    & python $scriptPath --host $HostIP --port $Port --audio-dir $AudioDir --cleanup-interval $CleanupInterval
} catch {
    Write-Error "Failed to start audio server: $_"
    exit 1
}

Write-Host ""
Write-Host "Audio server stopped."
