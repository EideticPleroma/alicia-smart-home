# Sonos Automations for Alicia Smart Home
# These automations handle TTS announcements and multi-room audio control

- id: sonos_tts_announcement
  alias: "Sonos TTS Announcement"
  description: "Play TTS announcements through Sonos speakers"
  trigger:
    - platform: mqtt
      topic: "alicia/tts/announce"
  action:
    - service: tts.google_translate_say
      entity_id: "{{ trigger.payload_json.speaker }}"
      data:
        message: "{{ trigger.payload_json.message }}"
        language: "{{ trigger.payload_json.language | default('en') }}"
    - service: mqtt.publish
      data:
        topic: "alicia/tts/status"
        payload_template: '{"status": "completed", "speaker": "{{ trigger.payload_json.speaker }}", "timestamp": "{{ now().isoformat() }}"}'

- id: sonos_group_control
  alias: "Sonos Multi-Room Group Control"
  description: "Create and manage Sonos speaker groups"
  trigger:
    - platform: mqtt
      topic: "alicia/commands/sonos/group"
  action:
    - service: sonos.join
      data:
        master: "{{ trigger.payload_json.master }}"
        entity_id: "{{ trigger.payload_json.members }}"
    - service: mqtt.publish
      data:
        topic: "alicia/devices/sonos/group/status"
        payload_template: '{"group_created": true, "master": "{{ trigger.payload_json.master }}", "members": {{ trigger.payload_json.members | tojson }}, "timestamp": "{{ now().isoformat() }}"}'

- id: sonos_volume_control
  alias: "Sonos Volume Control"
  description: "Control volume levels across Sonos speakers"
  trigger:
    - platform: mqtt
      topic: "alicia/commands/sonos/volume"
  action:
    - service: media_player.volume_set
      entity_id: "{{ trigger.payload_json.speaker }}"
      data:
        volume_level: "{{ trigger.payload_json.volume }}"
    - service: mqtt.publish
      data:
        topic: "alicia/devices/sonos/{{ trigger.payload_json.speaker.split('.')[-1] }}/status"
        payload_template: '{"volume": {{ trigger.payload_json.volume }}, "timestamp": "{{ now().isoformat() }}"}'

- id: sonos_playback_control
  alias: "Sonos Playback Control"
  description: "Control music playback on Sonos speakers"
  trigger:
    - platform: mqtt
      topic: "alicia/commands/sonos/playback"
  action:
    - service: "media_player.{{ trigger.payload_json.action }}"
      entity_id: "{{ trigger.payload_json.speaker }}"
    - service: mqtt.publish
      data:
        topic: "alicia/devices/sonos/{{ trigger.payload_json.speaker.split('.')[-1] }}/status"
        payload_template: '{"playback_action": "{{ trigger.payload_json.action }}", "timestamp": "{{ now().isoformat() }}"}'

- id: sonos_status_monitor
  alias: "Sonos Status Monitor"
  description: "Monitor and report Sonos speaker status"
  trigger:
    - platform: time_pattern
      minutes: "/5"
  condition:
    - condition: state
      entity_id: "media_player.living_room_sonos, media_player.kitchen_sonos, media_player.bedroom_sonos"
      state: "playing"
  action:
    - service: mqtt.publish
      data:
        topic: "alicia/devices/sonos/status"
        payload_template: |
          {
            "living_room": {
              "state": "{{ states('media_player.living_room_sonos') }}",
              "volume": "{{ state_attr('media_player.living_room_sonos', 'volume_level') }}",
              "source": "{{ state_attr('media_player.living_room_sonos', 'source') }}"
            },
            "kitchen": {
              "state": "{{ states('media_player.kitchen_sonos') }}",
              "volume": "{{ state_attr('media_player.kitchen_sonos', 'volume_level') }}",
              "source": "{{ state_attr('media_player.kitchen_sonos', 'source') }}"
            },
            "bedroom": {
              "state": "{{ states('media_player.bedroom_sonos') }}",
              "volume": "{{ state_attr('media_player.bedroom_sonos', 'volume_level') }}",
              "source": "{{ state_attr('media_player.bedroom_sonos', 'source') }}"
            },
            "timestamp": "{{ now().isoformat() }}"
          }
